<resources>
    <string name="app_name">DicodingCourses</string>

    <string name="course_name">Course Name</string>
    <string name="course_desc">Description</string>

    <string name="about_page">About</string>

    <string name="author">Muhammad Amirul Bimantoro</string>
    <string name="email">muhammad_s1sisfo2020@mahasiswa.ung.ac.id</string>

    <string name="img_item_content">Image Content</string>
    <string name="overview">Overview</string>
    <string name="syllabus">Silabus</string>
    <string name="syllabus_content">Daftar Silabus</string>
    <string name="enroll_now">Belajar Sekarang</string>

    <string-array name="course_name">
        <item>Memulai Dasar Pemrograman untuk Menjadi Pengembang Software</item>
        <item>Pengenalan ke Logika Pemrograman (Programming Logic 101)</item>
        <item>Belajar Dasar Git dengan \nGitHub</item>
        <item>Memulai Pemrograman dengan Java</item>
        <item>Memulai Pemrograman dengan Kotlin</item>
        <item>Belajar Membuat Aplikasi Android untuk Pemula</item>
        <item>Belajar Fundamental Aplikasi Android</item>
        <item>Belajar Pengembangan Aplikasi Android Intermediate</item>
        <item>Belajar Prinsip Pemrograman SOLID</item>
        <item>Menjadi Android Developer Expert</item>
    </string-array>

    <string-array name="course_desc">
        <item>Pelajari langkah menjadi pengembang software dari tahapan analisis dan perencanaan sampai modifikasi perangkat lunak beserta dokumentasi.</item>
        <item>Pelajari logika-logika dasar dalam pemrograman dimulai dari jenis-jenis logika pemrograman, gerbang logika, hingga computational thinking.</item>
        <item>Pelajari cara mengelola data atau kode menggunakan Git dengan GitHub, mulai dari dasar-dasar Git hingga berkolaborasi dengan tim.</item>
        <item>Belajar bahasa Java buat kamu yang ingin mempelajari konsep Pemrograman Berorientasi Objek (PBO) terpopuler untuk mengembangkan aplikasi.</item>
        <item>Pelajari dasar bahasa pemrograman, functional programming, object-oriented programming (OOP), serta concurrency dengan menggunakan Kotlin.</item>
        <item>Buat aplikasi pertamamu pada Android Studio dengan mempelajari dasar Activity, Intent, View &amp; ViewGroup, Style &amp; Theme sampai RecyclerView.</item>
        <item>Pelajari skill Android dengan kurikulum terlengkap yang dibutuhkan perusahaan. Mulai dari UI/UX, background process, API sampai database.</item>
        <item>Tingkatkan pengalaman pengguna dengan mempelajari Custom View, Animation, Localization, Media, Location, Testing, dan Advanced Database.</item>
        <item>Pelajari kelima prinsip desain yang merupakan pedoman untuk rancangan kode yang baik pada pemrograman berorientasi objek (OOP).</item>
        <item>Saatnya menjadi Android Expert dengan belajar Clean Architecture, Reactive, Dependency Injection, Modularization, Performance, dan Security.</item>
    </string-array>

    <integer-array name="course_photo">
        <item>@drawable/pengenalan_ke_dasar_pemrograman_basic_programming_101_logo</item>
        <item>@drawable/pengenalan_ke_logika_pemrograman_programming_logic_101_logo</item>
        <item>@drawable/belajar_dasar_git_dengan_github_logo</item>
        <item>@drawable/memulai_pemrograman_dengan_java_logo</item>
        <item>@drawable/memulai_pemrograman_dengan_kotlin_logo</item>
        <item>@drawable/belajar_membuat_aplikasi_android_untuk_pemula_logo</item>
        <item>@drawable/belajar_fundamental_aplikasi_android_logo</item>
        <item>@drawable/dos_belajar_pengembangan_aplikasi_android_intermediate_logo</item>
        <item>@drawable/belajar_prinsip_pemrograman_solid_logo</item>
        <item>@drawable/menjadi_android_developer_expert_logo</item>
    </integer-array>

    <string-array name="course_syllabus">
        <item>- Memahami Kebutuhan Aplikasi \n- Perencanaan Modifikasi Aplikasi\n- Mengerti Konsep Dasar Pemrograman\n- Modifikasi Aplikasi Perangkat Lunak\n- Dokumentasi Pemrograman dan Pengembangan Aplikasi Perangkat Lunak\n- Penutup</item>
        <item>- Pendahuluan\n- Gerbang Logika\n- Pengenalan Dasar Computational Thinking\n- Penutup</item>
        <item>- Git dan GitHub\n- Dasar Git\n- Studi Kasus Pengalaman Belajar\n- Git Branches\n- Kolaborasi dengan Tim\n- Studi Kasus Kolaborasi dengan Tim\n- GitHub sebagai Portfolio\n- Penutup</item>
        <item>- Pengenalan Java\n- Java Dasar\n- Control Flow\n- Collection Type\n- Object-Oriented Programming (OOP)\n- Common Class\n- Studi Kasus\n- Penutup</item>
        <item>- Pendahuluan\n- Persiapan Membangun dan Menjalankan Program Kotlin\n- Kotlin Fundamental\n- Control Flow\n- Data Classes dan Collections\n- Kotlin Functional Programming\n- Kotlin Object-Oriented Programming\n- Kotlin Generics\n- Berkenalan dengan Coroutines\n- Penutup</item>
        <item>- Pengenalan Android Studio\n- Activity\n- Intent\n- View dan ViewGroup\n- Style dan Theme\n- RecyclerView\n- Penutup</item>
        <item>- Dasar Pengembangan Aplikasi Android\n- Fragment\n- Navigation\n- Background Thread dan Networking\n- Android Architecture Component\n- Studi Kasus Implementasi Navigation dan API\n- Testing\n- Local Data Persistent\n- Background Task &amp; Scheduler\n- Penutup</item>
        <item>- Advanced UI\n- Animation\n- Localization &amp; Accessibility\n- Service\n- Media\n- Submission Aplikasi Story App\n- Geo Location\n- Advanced Testing\n- Advanced Database\n- Firebase\n- Submission Akhir Aplikasi Story App</item>
        <item>- Object-Oriented Programming (OOP)\- Relasi pada OOP\n- Software Design Principle\n- S.O.L.I.D\n- Penutup</item>
        <item>- Clean Architecture\n- Reactive Programming\n- Dependency Injection\n- Modularization\n- Capstone Proyek Aplikasi Android\n- Continuous Integration\n- Performance\n- Security\n- Build App with Useful Libraries\n- Penutup</item>
    </string-array>
</resources>